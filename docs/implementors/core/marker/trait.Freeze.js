(function() {var implementors = {
"parquet2":[["impl Freeze for <a class=\"enum\" href=\"parquet2/error/enum.Feature.html\" title=\"enum parquet2::error::Feature\">Feature</a>",1,["parquet2::error::Feature"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/error/enum.Error.html\" title=\"enum parquet2::error::Error\">Error</a>",1,["parquet2::error::Error"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/compression/struct.BrotliLevel.html\" title=\"struct parquet2::compression::BrotliLevel\">BrotliLevel</a>",1,["parquet2::parquet_bridge::BrotliLevel"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/compression/enum.Compression.html\" title=\"enum parquet2::compression::Compression\">Compression</a>",1,["parquet2::parquet_bridge::Compression"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/compression/enum.CompressionOptions.html\" title=\"enum parquet2::compression::CompressionOptions\">CompressionOptions</a>",1,["parquet2::parquet_bridge::CompressionOptions"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/compression/struct.GzipLevel.html\" title=\"struct parquet2::compression::GzipLevel\">GzipLevel</a>",1,["parquet2::parquet_bridge::GzipLevel"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/compression/struct.ZstdLevel.html\" title=\"struct parquet2::compression::ZstdLevel\">ZstdLevel</a>",1,["parquet2::parquet_bridge::ZstdLevel"]],["impl&lt;'a, P&gt; Freeze for <a class=\"enum\" href=\"parquet2/deserialize/enum.BinaryPageState.html\" title=\"enum parquet2::deserialize::BinaryPageState\">BinaryPageState</a>&lt;'a, P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,</span>",1,["parquet2::deserialize::binary::BinaryPageState"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"parquet2/deserialize/enum.BooleanPageState.html\" title=\"enum parquet2::deserialize::BooleanPageState\">BooleanPageState</a>&lt;'a&gt;",1,["parquet2::deserialize::boolean::BooleanPageState"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"parquet2/deserialize/enum.FilteredHybridEncoded.html\" title=\"enum parquet2::deserialize::FilteredHybridEncoded\">FilteredHybridEncoded</a>&lt;'a&gt;",1,["parquet2::deserialize::filtered_rle::FilteredHybridEncoded"]],["impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"parquet2/deserialize/struct.FilteredHybridBitmapIter.html\" title=\"struct parquet2::deserialize::FilteredHybridBitmapIter\">FilteredHybridBitmapIter</a>&lt;'a, I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,</span>",1,["parquet2::deserialize::filtered_rle::FilteredHybridBitmapIter"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"parquet2/deserialize/struct.FixexBinaryIter.html\" title=\"struct parquet2::deserialize::FixexBinaryIter\">FixexBinaryIter</a>&lt;'a&gt;",1,["parquet2::deserialize::fixed_len::FixexBinaryIter"]],["impl&lt;'a, P&gt; Freeze for <a class=\"enum\" href=\"parquet2/deserialize/enum.FixedLenBinaryPageState.html\" title=\"enum parquet2::deserialize::FixedLenBinaryPageState\">FixedLenBinaryPageState</a>&lt;'a, P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,</span>",1,["parquet2::deserialize::fixed_len::FixedLenBinaryPageState"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"parquet2/deserialize/enum.HybridEncoded.html\" title=\"enum parquet2::deserialize::HybridEncoded\">HybridEncoded</a>&lt;'a&gt;",1,["parquet2::deserialize::hybrid_rle::HybridEncoded"]],["impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"parquet2/deserialize/struct.HybridRleIter.html\" title=\"struct parquet2::deserialize::HybridRleIter\">HybridRleIter</a>&lt;'a, I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,</span>",1,["parquet2::deserialize::hybrid_rle::HybridRleIter"]],["impl&lt;'a, I&gt; Freeze for <a class=\"struct\" href=\"parquet2/deserialize/struct.HybridRleBooleanIter.html\" title=\"struct parquet2::deserialize::HybridRleBooleanIter\">HybridRleBooleanIter</a>&lt;'a, I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,</span>",1,["parquet2::deserialize::hybrid_rle::HybridRleBooleanIter"]],["impl&lt;'a, T, P&gt; Freeze for <a class=\"enum\" href=\"parquet2/deserialize/enum.NativePageState.html\" title=\"enum parquet2::deserialize::NativePageState\">NativePageState</a>&lt;'a, T, P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,</span>",1,["parquet2::deserialize::native::NativePageState"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"parquet2/deserialize/enum.DefLevelsDecoder.html\" title=\"enum parquet2::deserialize::DefLevelsDecoder\">DefLevelsDecoder</a>&lt;'a&gt;",1,["parquet2::deserialize::utils::DefLevelsDecoder"]],["impl&lt;T, V, I&gt; Freeze for <a class=\"struct\" href=\"parquet2/deserialize/struct.OptionalValues.html\" title=\"struct parquet2::deserialize::OptionalValues\">OptionalValues</a>&lt;T, V, I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;V: Freeze,</span>",1,["parquet2::deserialize::utils::OptionalValues"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"parquet2/deserialize/struct.SliceFilteredIter.html\" title=\"struct parquet2::deserialize::SliceFilteredIter\">SliceFilteredIter</a>&lt;I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,</span>",1,["parquet2::deserialize::utils::SliceFilteredIter"]],["impl&lt;'a, T&gt; Freeze for <a class=\"struct\" href=\"parquet2/encoding/bitpacked/struct.Decoder.html\" title=\"struct parquet2::encoding::bitpacked::Decoder\">Decoder</a>&lt;'a, T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;T as <a class=\"trait\" href=\"parquet2/encoding/bitpacked/trait.Unpackable.html\" title=\"trait parquet2::encoding::bitpacked::Unpackable\">Unpackable</a>&gt;::<a class=\"associatedtype\" href=\"parquet2/encoding/bitpacked/trait.Unpackable.html#associatedtype.Unpacked\" title=\"type parquet2::encoding::bitpacked::Unpackable::Unpacked\">Unpacked</a>: Freeze,</span>",1,["parquet2::encoding::bitpacked::decode::Decoder"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"parquet2/encoding/delta_bitpacked/struct.Decoder.html\" title=\"struct parquet2::encoding::delta_bitpacked::Decoder\">Decoder</a>&lt;'a&gt;",1,["parquet2::encoding::delta_bitpacked::decoder::Decoder"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"parquet2/encoding/delta_byte_array/struct.Decoder.html\" title=\"struct parquet2::encoding::delta_byte_array::Decoder\">Decoder</a>&lt;'a&gt;",1,["parquet2::encoding::delta_byte_array::decoder::Decoder"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"parquet2/encoding/delta_length_byte_array/struct.Decoder.html\" title=\"struct parquet2::encoding::delta_length_byte_array::Decoder\">Decoder</a>&lt;'a&gt;",1,["parquet2::encoding::delta_length_byte_array::decoder::Decoder"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"parquet2/encoding/hybrid_rle/struct.BitmapIter.html\" title=\"struct parquet2::encoding::hybrid_rle::BitmapIter\">BitmapIter</a>&lt;'a&gt;",1,["parquet2::encoding::hybrid_rle::bitmap::BitmapIter"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"parquet2/encoding/hybrid_rle/struct.Decoder.html\" title=\"struct parquet2::encoding::hybrid_rle::Decoder\">Decoder</a>&lt;'a&gt;",1,["parquet2::encoding::hybrid_rle::decoder::Decoder"]],["impl&lt;'a&gt; Freeze for <a class=\"enum\" href=\"parquet2/encoding/hybrid_rle/enum.HybridEncoded.html\" title=\"enum parquet2::encoding::hybrid_rle::HybridEncoded\">HybridEncoded</a>&lt;'a&gt;",1,["parquet2::encoding::hybrid_rle::HybridEncoded"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"parquet2/encoding/hybrid_rle/struct.HybridRleDecoder.html\" title=\"struct parquet2::encoding::hybrid_rle::HybridRleDecoder\">HybridRleDecoder</a>&lt;'a&gt;",1,["parquet2::encoding::hybrid_rle::HybridRleDecoder"]],["impl&lt;'a&gt; Freeze for <a class=\"struct\" href=\"parquet2/encoding/plain_byte_array/struct.BinaryIter.html\" title=\"struct parquet2::encoding::plain_byte_array::BinaryIter\">BinaryIter</a>&lt;'a&gt;",1,["parquet2::encoding::plain_byte_array::BinaryIter"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/encoding/enum.Encoding.html\" title=\"enum parquet2::encoding::Encoding\">Encoding</a>",1,["parquet2::parquet_bridge::Encoding"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"parquet2/indexes/struct.NativeIndex.html\" title=\"struct parquet2::indexes::NativeIndex\">NativeIndex</a>&lt;T&gt;",1,["parquet2::indexes::index::NativeIndex"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"parquet2/indexes/struct.PageIndex.html\" title=\"struct parquet2::indexes::PageIndex\">PageIndex</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,</span>",1,["parquet2::indexes::index::PageIndex"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/indexes/struct.ByteIndex.html\" title=\"struct parquet2::indexes::ByteIndex\">ByteIndex</a>",1,["parquet2::indexes::index::ByteIndex"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/indexes/struct.FixedLenByteIndex.html\" title=\"struct parquet2::indexes::FixedLenByteIndex\">FixedLenByteIndex</a>",1,["parquet2::indexes::index::FixedLenByteIndex"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/indexes/struct.BooleanIndex.html\" title=\"struct parquet2::indexes::BooleanIndex\">BooleanIndex</a>",1,["parquet2::indexes::index::BooleanIndex"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/indexes/struct.Interval.html\" title=\"struct parquet2::indexes::Interval\">Interval</a>",1,["parquet2::indexes::intervals::Interval"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/indexes/struct.FilteredPage.html\" title=\"struct parquet2::indexes::FilteredPage\">FilteredPage</a>",1,["parquet2::indexes::intervals::FilteredPage"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/indexes/enum.BoundaryOrder.html\" title=\"enum parquet2::indexes::BoundaryOrder\">BoundaryOrder</a>",1,["parquet2::parquet_bridge::BoundaryOrder"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/metadata/struct.ColumnChunkMetaData.html\" title=\"struct parquet2::metadata::ColumnChunkMetaData\">ColumnChunkMetaData</a>",1,["parquet2::metadata::column_chunk_metadata::ColumnChunkMetaData"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/metadata/struct.Descriptor.html\" title=\"struct parquet2::metadata::Descriptor\">Descriptor</a>",1,["parquet2::metadata::column_descriptor::Descriptor"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/metadata/struct.ColumnDescriptor.html\" title=\"struct parquet2::metadata::ColumnDescriptor\">ColumnDescriptor</a>",1,["parquet2::metadata::column_descriptor::ColumnDescriptor"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/metadata/enum.ColumnOrder.html\" title=\"enum parquet2::metadata::ColumnOrder\">ColumnOrder</a>",1,["parquet2::metadata::column_order::ColumnOrder"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/metadata/struct.FileMetaData.html\" title=\"struct parquet2::metadata::FileMetaData\">FileMetaData</a>",1,["parquet2::metadata::file_metadata::FileMetaData"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/metadata/struct.RowGroupMetaData.html\" title=\"struct parquet2::metadata::RowGroupMetaData\">RowGroupMetaData</a>",1,["parquet2::metadata::row_metadata::RowGroupMetaData"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/metadata/struct.SchemaDescriptor.html\" title=\"struct parquet2::metadata::SchemaDescriptor\">SchemaDescriptor</a>",1,["parquet2::metadata::schema_descriptor::SchemaDescriptor"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/metadata/enum.SortOrder.html\" title=\"enum parquet2::metadata::SortOrder\">SortOrder</a>",1,["parquet2::metadata::sort::SortOrder"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/page/enum.PageType.html\" title=\"enum parquet2::page::PageType\">PageType</a>",1,["parquet2::parquet_bridge::PageType"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/page/struct.CompressedDataPage.html\" title=\"struct parquet2::page::CompressedDataPage\">CompressedDataPage</a>",1,["parquet2::page::CompressedDataPage"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/page/enum.DataPageHeader.html\" title=\"enum parquet2::page::DataPageHeader\">DataPageHeader</a>",1,["parquet2::page::DataPageHeader"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/page/struct.DataPage.html\" title=\"struct parquet2::page::DataPage\">DataPage</a>",1,["parquet2::page::DataPage"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/page/enum.Page.html\" title=\"enum parquet2::page::Page\">Page</a>",1,["parquet2::page::Page"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/page/enum.CompressedPage.html\" title=\"enum parquet2::page::CompressedPage\">CompressedPage</a>",1,["parquet2::page::CompressedPage"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/page/struct.DictPage.html\" title=\"struct parquet2::page::DictPage\">DictPage</a>",1,["parquet2::page::DictPage"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/page/struct.CompressedDictPage.html\" title=\"struct parquet2::page::CompressedDictPage\">CompressedDictPage</a>",1,["parquet2::page::CompressedDictPage"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/schema/enum.Repetition.html\" title=\"enum parquet2::schema::Repetition\">Repetition</a>",1,["parquet2::parquet_bridge::Repetition"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/schema/types/enum.TimeUnit.html\" title=\"enum parquet2::schema::types::TimeUnit\">TimeUnit</a>",1,["parquet2::parquet_bridge::TimeUnit"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/schema/types/enum.IntegerType.html\" title=\"enum parquet2::schema::types::IntegerType\">IntegerType</a>",1,["parquet2::parquet_bridge::IntegerType"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/schema/types/enum.PrimitiveLogicalType.html\" title=\"enum parquet2::schema::types::PrimitiveLogicalType\">PrimitiveLogicalType</a>",1,["parquet2::parquet_bridge::PrimitiveLogicalType"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/schema/types/enum.GroupLogicalType.html\" title=\"enum parquet2::schema::types::GroupLogicalType\">GroupLogicalType</a>",1,["parquet2::parquet_bridge::GroupLogicalType"]],["impl&lt;P&gt; Freeze for <a class=\"struct\" href=\"parquet2/read/struct.Decompressor.html\" title=\"struct parquet2::read::Decompressor\">Decompressor</a>&lt;P&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;P: Freeze,</span>",1,["parquet2::read::compression::Decompressor"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"parquet2/read/struct.BasicDecompressor.html\" title=\"struct parquet2::read::BasicDecompressor\">BasicDecompressor</a>&lt;I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,</span>",1,["parquet2::read::compression::BasicDecompressor"]],["impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"parquet2/read/struct.IndexedPageReader.html\" title=\"struct parquet2::read::IndexedPageReader\">IndexedPageReader</a>&lt;R&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,</span>",1,["parquet2::read::page::indexed_reader::IndexedPageReader"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/read/struct.PageMetaData.html\" title=\"struct parquet2::read::PageMetaData\">PageMetaData</a>",1,["parquet2::read::page::reader::PageMetaData"]],["impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"parquet2/read/struct.PageReader.html\" title=\"struct parquet2::read::PageReader\">PageReader</a>&lt;R&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,</span>",1,["parquet2::read::page::reader::PageReader"]],["impl&lt;T&gt; Freeze for <a class=\"enum\" href=\"parquet2/read/enum.State.html\" title=\"enum parquet2::read::State\">State</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,</span>",1,["parquet2::read::State"]],["impl&lt;R&gt; Freeze for <a class=\"struct\" href=\"parquet2/read/struct.ColumnIterator.html\" title=\"struct parquet2::read::ColumnIterator\">ColumnIterator</a>&lt;R&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;R: Freeze,</span>",1,["parquet2::read::ColumnIterator"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/read/struct.ReadColumnIterator.html\" title=\"struct parquet2::read::ReadColumnIterator\">ReadColumnIterator</a>",1,["parquet2::read::ReadColumnIterator"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/schema/types/enum.PhysicalType.html\" title=\"enum parquet2::schema::types::PhysicalType\">PhysicalType</a>",1,["parquet2::schema::types::physical_type::PhysicalType"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/schema/types/struct.FieldInfo.html\" title=\"struct parquet2::schema::types::FieldInfo\">FieldInfo</a>",1,["parquet2::schema::types::basic_type::FieldInfo"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/schema/types/enum.PrimitiveConvertedType.html\" title=\"enum parquet2::schema::types::PrimitiveConvertedType\">PrimitiveConvertedType</a>",1,["parquet2::schema::types::converted_type::PrimitiveConvertedType"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/schema/types/enum.GroupConvertedType.html\" title=\"enum parquet2::schema::types::GroupConvertedType\">GroupConvertedType</a>",1,["parquet2::schema::types::converted_type::GroupConvertedType"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/schema/types/struct.PrimitiveType.html\" title=\"struct parquet2::schema::types::PrimitiveType\">PrimitiveType</a>",1,["parquet2::schema::types::parquet_type::PrimitiveType"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/schema/types/enum.ParquetType.html\" title=\"enum parquet2::schema::types::ParquetType\">ParquetType</a>",1,["parquet2::schema::types::parquet_type::ParquetType"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/statistics/struct.BinaryStatistics.html\" title=\"struct parquet2::statistics::BinaryStatistics\">BinaryStatistics</a>",1,["parquet2::statistics::binary::BinaryStatistics"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/statistics/struct.BooleanStatistics.html\" title=\"struct parquet2::statistics::BooleanStatistics\">BooleanStatistics</a>",1,["parquet2::statistics::boolean::BooleanStatistics"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/statistics/struct.FixedLenStatistics.html\" title=\"struct parquet2::statistics::FixedLenStatistics\">FixedLenStatistics</a>",1,["parquet2::statistics::fixed_len_binary::FixedLenStatistics"]],["impl&lt;T&gt; Freeze for <a class=\"struct\" href=\"parquet2/statistics/struct.PrimitiveStatistics.html\" title=\"struct parquet2::statistics::PrimitiveStatistics\">PrimitiveStatistics</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Freeze,</span>",1,["parquet2::statistics::primitive::PrimitiveStatistics"]],["impl&lt;I&gt; Freeze for <a class=\"struct\" href=\"parquet2/write/struct.Compressor.html\" title=\"struct parquet2::write::Compressor\">Compressor</a>&lt;I&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Freeze,</span>",1,["parquet2::write::compression::Compressor"]],["impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"parquet2/write/struct.FileWriter.html\" title=\"struct parquet2::write::FileWriter\">FileWriter</a>&lt;W&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,</span>",1,["parquet2::write::file::FileWriter"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/write/struct.ColumnOffsetsMetadata.html\" title=\"struct parquet2::write::ColumnOffsetsMetadata\">ColumnOffsetsMetadata</a>",1,["parquet2::write::row_group::ColumnOffsetsMetadata"]],["impl&lt;W&gt; Freeze for <a class=\"struct\" href=\"parquet2/write/struct.FileStreamer.html\" title=\"struct parquet2::write::FileStreamer\">FileStreamer</a>&lt;W&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;W: Freeze,</span>",1,["parquet2::write::stream::FileStreamer"]],["impl&lt;'a, V&gt; Freeze for <a class=\"struct\" href=\"parquet2/write/struct.DynIter.html\" title=\"struct parquet2::write::DynIter\">DynIter</a>&lt;'a, V&gt;",1,["parquet2::write::dyn_iter::DynIter"]],["impl&lt;'a, V, E&gt; Freeze for <a class=\"struct\" href=\"parquet2/write/struct.DynStreamingIterator.html\" title=\"struct parquet2::write::DynStreamingIterator\">DynStreamingIterator</a>&lt;'a, V, E&gt;",1,["parquet2::write::dyn_iter::DynStreamingIterator"]],["impl Freeze for <a class=\"struct\" href=\"parquet2/write/struct.WriteOptions.html\" title=\"struct parquet2::write::WriteOptions\">WriteOptions</a>",1,["parquet2::write::WriteOptions"]],["impl Freeze for <a class=\"enum\" href=\"parquet2/write/enum.Version.html\" title=\"enum parquet2::write::Version\">Version</a>",1,["parquet2::write::Version"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()