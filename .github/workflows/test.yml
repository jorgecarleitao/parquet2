name: Check and test

on: [push, pull_request]

jobs:
  # test the crate
  linux-test:
    name: Test
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: /github/home/.cargo
          # these represent dependencies downloaded by cargo
          # and thus do not depend on the OS, arch nor rust version.
          key: cargo-cache-
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: /github/home/target
          # these represent compiled steps of both dependencies and arrow
          # and thus are specific for a particular OS, arch and rust version.
          key: ${{ runner.os }}-amd64-target-cache-stable
      - name: Setup toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup component add rustfmt
      - name: Run unit tests
        run: |
          export CARGO_HOME="/github/home/.cargo"
          export CARGO_TARGET_DIR="/github/home/target"
          cargo test
          cargo test --no-default-features --features snappy --features gzip --features lz4_flex --features zstd --features brotli --features stream
      - name: Setup parquet files
        run: |
          apt update && apt install python3-pip python3-venv -y -q
          cd integration-tests
          python3 -m venv venv
          venv/bin/pip install pip --upgrade
          venv/bin/pip install pyarrow==5
          venv/bin/python integration/write_pyarrow.py
          cd ..
      - name: Run integration tests
        run: |
          export CARGO_HOME="/github/home/.cargo"
          export CARGO_TARGET_DIR="/github/home/target"
          cd integration-tests
          cargo test

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    container:
      image: amd64/rust
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: /github/home/.cargo
          # these represent dependencies downloaded by cargo
          # and thus do not depend on the OS, arch nor rust version.
          key: cargo-cache-
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: /github/home/target
          # these represent compiled steps of both dependencies and arrow
          # and thus are specific for a particular OS, arch and rust version.
          key: ${{ runner.os }}-amd64-target-cache-stable
      - name: Setup toolchain
        run: |
          rustup toolchain install stable
          rustup default stable
          rustup component add rustfmt clippy
      - name: Run
        run: |
          export CARGO_HOME="/github/home/.cargo"
          export CARGO_TARGET_DIR="/github/home/target"
          cargo clippy

  coverage:
    name: Coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Cache Cargo
        uses: actions/cache@v2
        with:
          path: /home/runner/.cargo
          # this key is not equal because the user is different than on a container (runner vs github)
          key: cargo-coverage-cache-
      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: /home/runner/target
          # this key is not equal because coverage uses different compilation flags.
          key: ${{ runner.os }}-amd64-target-coverage-cache-stable-
      - name: Setup parquet files
        run: |
          apt update && apt install python3-pip python3-venv -y -q
          cd integration-tests
          python3 -m venv venv
          venv/bin/pip install pip --upgrade
          venv/bin/pip install pyarrow==5
          venv/bin/python integration/write_pyarrow.py
          cd ..
      - name: Run coverage
        run: |
          export CARGO_HOME="/home/runner/.cargo"
          export CARGO_TARGET_DIR="/home/runner/target"

          # 2020-11-15: There is a cargo-tarpaulin regression in 0.17.0
          # see https://github.com/xd009642/tarpaulin/issues/618
          cargo install --version 0.16.0 cargo-tarpaulin
          cargo tarpaulin --out Xml
          cd integration-tests
          cargo tarpaulin --out Xml
      - name: Report coverage
        continue-on-error: true
        run: bash <(curl -s https://codecov.io/bash)
